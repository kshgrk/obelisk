# Combined Dockerfile - runs both backend and frontend FastAPI apps
FROM python:3.12-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    supervisor \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install Temporal CLI
RUN wget -q https://github.com/temporalio/cli/releases/download/v0.12.0/temporal_cli_0.12.0_linux_amd64.tar.gz -O /tmp/temporal_cli.tar.gz && \
    tar -xzf /tmp/temporal_cli.tar.gz -C /usr/local/bin && \
    rm /tmp/temporal_cli.tar.gz && \
    chmod +x /usr/local/bin/temporal

# Create Temporal directories
RUN mkdir -p /var/lib/temporal /var/log/temporal

# Create non-root user
RUN useradd --create-home --shell /bin/bash app

# Set work directory
WORKDIR /app

# Copy dependency files first for better caching
COPY pyproject.toml ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -e .

# Copy application code
COPY . .

# Create directory for database and logs
RUN mkdir -p /app/data /app/logs /var/log/supervisor && \
    chown -R app:app /app/data /app/logs

# Configure supervisor to run backend, frontend, and temporal
RUN echo '[supervisord]\n\
nodaemon=true\n\
logfile=/app/logs/supervisord.log\n\
logfile_maxbytes=50MB\n\
logfile_backups=10\n\
loglevel=info\n\
\n\
[program:temporal]\n\
command=temporal server start --port 7233 --namespace default --db-filename /var/lib/temporal/temporal.db\n\
directory=/app\n\
user=root\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/app/logs/temporal.log\n\
stderr_logfile=/app/logs/temporal_error.log\n\
\n\
[program:backend]\n\
command=su -c "cd /app && uvicorn main:app --host 0.0.0.0 --port 8001 --log-level info" app\n\
directory=/app\n\
user=root\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/app/logs/backend.log\n\
stderr_logfile=/app/logs/backend_error.log\n\
\n\
[program:frontend]\n\
command=su -c "cd /app && python frontend/app.py" app\n\
directory=/app\n\
user=root\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/app/logs/frontend.log\n\
stderr_logfile=/app/logs/frontend_error.log\n\
\n\
[program:worker]\n\
command=su -c "cd /app && python src/temporal/workers/simple_chat_worker.py" app\n\
directory=/app\n\
user=root\n\
autostart=true\n\
autorestart=true\n\
stdout_logfile=/app/logs/worker.log\n\
stderr_logfile=/app/logs/worker_error.log\n\
' > /etc/supervisor/conf.d/obelisk.conf

# Expose ports
EXPOSE 3000 8001 7233

# Health check for frontend (Cloud Run compatible)
HEALTHCHECK --interval=30s --timeout=30s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Start supervisor (which starts all services)
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/obelisk.conf"]
